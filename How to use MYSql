npm install mysql

import mysql from 'mysql';

const dbConfig = {
    host: process.env.MYSQL_HOST,
    user: process.env.MYSQL_USER,
    password: process.env.MYSQL_PASSWORD,
    database: process.env.MYSQL_DATABASE
};

let connection;

const connectToMySQL = () => {
    connection = mysql.createConnection(dbConfig);

    connection.connect((err) => {
        if (err) {
            console.error('Error connecting to MySQL database:', err);
            return;
        }
        console.log('Connected to MySQL database');
    });
};

const getMySQLConnection = () => {
    return connection;
};

export { connectToMySQL, getMySQLConnection };



//create an another js file and write this code in it and import it in server.js at top
import { connectToMySQL } from './mysql.js';

connectToMySQL();



//to use it in any repository  we have to do like something like this; 

import { getConnection } from './mysql.js'; // Assuming you have a function to get the MySQL connection

async function getProductById(productId) {
    try {
        const connection = getConnection(); // Get the MySQL connection
        const [rows, fields] = await connection.execute('CALL GetProductById(?)', [productId]); // Call the stored procedure
        // Process the result and return the product data
        if (rows && rows.length > 0) {
            return rows[0]; // Assuming the stored procedure returns a single product row
        } else {
            return null; // Product not found
        }
    } catch (error) {
        console.error('Error executing stored procedure:', error);
        throw error; // Handle or rethrow the error as needed
    }
}
